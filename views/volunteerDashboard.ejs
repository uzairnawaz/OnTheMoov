<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Portal</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar-scheduler@6.1.9/index.global.min.js'></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/izitoast/1.4.0/css/iziToast.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/izitoast/1.4.0/js/iziToast.min.js"></script>

    <style>
        .flex-container {
            background-color: #e8f5fd; /* A very light shade of blue */
            color: #333 !important; /* Dark font color for readability */
            width: 82%; 
            height: 75%; 
            margin-left: auto !important; 
            margin-right: auto !important; 
            margin-top: 3%; /* Added top margin */
            
        }
    
        .fc-col-header-cell {
            color: #333 !important; 
        }
    
        .welcome-message {
            width: 100%;
        }
    
        body {
            background-color: #f7f7f7;
            color: #333;
            font-family: 'Helvetica', sans-serif;
        }
    
        .navbar {
            background-color: #fff;
            border-bottom: 1px solid #e0e0e0;
        }
    
        .navbar-brand {
            color: #007bff !important;
        }
    
        .navbar-nav .nav-link {
            color: #333 !important;
            padding-left: 20px;
            padding-right: 20px;
            transition: color 0.3s;
        }
    
        .navbar-nav .nav-link:hover {
            color: #007bff !important;
        }
    
        .navbar-toggler {
            border-color: #007bff;
        }
    
        .navbar-toggler-icon {
            background-color: #007bff;
        }
    
        .main-content {
            background-color: #ffffff;
            color: #333;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
            margin: 20px 0;
        }
    
        .modal {
            color: black;
        }
    
        .fc-col-header-cell-cushion {
            color: #333; /* Change this to a darker color for better readability */
        }
    
        .modal-content {
            border-radius: 10px;
        }
    
        #form {
            padding: 20px;
        }
    
        #form label {
            font-weight: bold;
            font-size: 16px;
        }
    
        #form .form-control {
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            font-size: 16px;
        }
    
        .modal-footer button {
            font-size: 16px;
            font-weight: bold;
        }
    </style>
    </head>

<body>

    <nav class="navbar navbar-expand-lg">
        <a class="navbar-brand" href="/volunteer">OnTheMoov</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/volunteer/dashboard">Dashboard</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/volunteer">Volunteer</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/volunteer/ranking">Ranking</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/logout">Logout</a>
                </li>

            </ul>
        </div>
    </nav>

    <div class="flex-container calendar-width calendar-height">
        <div id="calendar"></div>
    </div>

    <!-- Bootstrap modal for confirmation -->
    <div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Event Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><span id="selectedTimeRange"></span></p>
                </div>

                <div id="form">
                    <div class="mb-3">
                        <label for="fromLocation" class="form-label">From:</label>
                        <input type="text" class="form-control" id="fromLocation" name="from">
                    </div>
                    <div class="mb-3">
                        <label for="toLocation" class="form-label">To:</label>
                        <input type="text" class="form-control" id="toLocation" name="to">
                    </div>
                    <div class="modal-footer" id="form-buttons">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModal">Close</button>
                        <input type="submit" id="submitEvent" value="Submit" class="btn btn-primary">
                    </div>
                </div>

                <div class="modal-footer" id="modal-buttons">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" id="closeModal">Close</button>
                    <button type="button" class="btn btn-danger" id="revertButton">Revert</button>
                </div>
            </div>
        </div>
    </div>


    <script>
        function formatDateTime(startStr, endStr, from, to, slotted) {
            let startDate = new Date(startStr);
            let endDate = new Date(endStr);

            let dateOptions = {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
            };

            let timeOptions = {
                hour: '2-digit',
                minute: '2-digit',
                timeZoneName: 'short'
            };

            let formattedStartDate = startDate.toLocaleString('en-US', dateOptions);
            let formattedStartTime = startDate.toLocaleString('en-US', timeOptions);
            let formattedEndTime = endDate.toLocaleString('en-US', timeOptions);
            
            if (startDate.toDateString() === endDate.toDateString()) {
                // If both dates are the same
                return `<strong>From:</strong> ${from}<br>
                        <strong>To:</strong> ${to}<br>
                        <strong>Date:</strong> ${formattedStartDate}<br>
                        <strong>Time:</strong> ${formattedStartTime} to ${formattedEndTime}<br>
                        <strong>Slotted:</strong> ${slotted}`;
            } else {
                let formattedEndDate = endDate.toLocaleString('en-US', dateOptions);
                return `<strong>From:</strong> ${from}<br>
                        <strong>To:</strong> ${to}<br>
                        <strong>Date:</strong> ${formattedStartDate}<br>
                        <strong>Time:</strong> ${formattedStartTime}<br>
                        <strong>to</strong><br>
                        <strong>Date:</strong> ${formattedEndDate}<br>
                        <strong>Time:</strong> ${formattedEndTime}<br>
                        <strong>Slotted:</strong> ${slotted}`;
            }
        }


        document.addEventListener('DOMContentLoaded', function () {
            var everyInfo = <%- JSON.stringify(infos) %>;
            let name = '<%- name %>';
            var calendarEl = document.getElementById('calendar');
            var infos;

            var selectedEvent;

            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'timeGridWeek',
                height: screen.height * 0.7,
                headerToolbar: {
                    left: 'prev,next',
                    center: 'title',
                    right: ''
                },
                selectable: true,
                allDaySlot: false,
                dayHeaderClassNames: ["dayHeaders"],
                select: function (info) {
            },
            eventClick: function (info) {
                selectedEvent = info.event;
                document.getElementById('selectedTimeRange').innerHTML = formatDateTime(info.event.startStr, info.event.endStr, info.event.extendedProps.from, info.event.extendedProps.to, info.event.extendedProps.slotted);
                infos = info.event;
                if (info.event.extendedProps.slotted) {
                    $('#revertButton').show();
                } else {
                    $('#revertButton').hide();
                }
                
                $('#modal-buttons').show();  // Showing the modal buttons
                $('#form-buttons').hide();  // Hiding the form buttons
                $('#form').hide();  // Hide the form
                $('#eventModal').modal('show');
            }
            });

            for (let i = 0; i < everyInfo.length; i++) {
                    calendar.addEvent({
                        title: everyInfo[i].name,
                        start: new Date(everyInfo[i].startTime),
                        end: new Date(everyInfo[i].endTime),
                        from: everyInfo[i].fromPlace,
                        extendedProps: {    
                            from: everyInfo[i].fromPlace,
                            to: everyInfo[i].toPlace,
                            id: everyInfo[i]._id,
                            slotted: everyInfo[i].slotted
                        }
                    });
            }
            console.log('see');
            console.log(selectedEvent);
            if (infos != undefined) {
                    infos.remove();
                    calendar.render();
            }

            calendar.render();
          

            // Handle the event submission
            document.getElementById('revertButton').addEventListener('click', function () {
                var eventData = {
                    startStr: infos.startStr,
                    endStr: infos.endStr,
                    from: infos.extendedProps.from,
                    to: infos.extendedProps.to,
                    name: infos.title,
                    id: infos.extendedProps.id
                };

                $.ajax({
                    url: '/volunteer/revertEvent',
                    method: 'POST',
                    data: eventData,
                    success: function(response) {
                        console.log(response)
                        iziToast.success({
                        title: 'Success',
                        message: 'You are no longed assigned to the time slot'
                        });
                    },
                    error: function(error) {
                        console.log(error);
                        // Handle the error response
                        iziToast.error({
                        title: 'Error',
                        message: 'Something did not go right'
                        });
                    }
                });
                $('#eventModal').modal('hide');
                selectedEvent.remove();
                calendar.render();


            });

        });
    </script>

</body>

</html>
